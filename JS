const API_URL = "https://api.github.com/users/";

const form = document.getElementById("form");
const search = document.getElementById("search");
const main = document.getElementById("main");

// Handle form submit
form.addEventListener("submit", (e) => {
  e.preventDefault();
  const user = search.value.trim();

  if (user) {
    getUser(user);
    search.value = "";
  }
});

// Fetch user data
async function getUser(username) {
  try {
    const { data } = await axios.get(API_URL + username);
    createUserCard(data);
    getRepos(username);
  } catch (err) {
    if (err.response.status === 404) {
      createErrorCard("No profile found for this username.");
    } else {
      createErrorCard("An error occurred. Try again later.");
    }
  }
}

// Fetch repos
async function getRepos(username) {
  try {
    const { data } = await axios.get(`${API_URL}${username}/repos?sort=created`);
    addReposToCard(data);
  } catch (err) {
    createErrorCard("Problem fetching repositories.");
  }
}

// Create user card
function createUserCard(user) {
  const cardHTML = `
    <div class="card">
      <img src="${user.avatar_url}" alt="${user.name}" class="avatar" />
      <div class="user-info">
        <h2>${user.name || user.login}</h2>
        <p>${user.bio || ""}</p>
        <ul>
          <li><strong>${user.followers}</strong> Followers</li>
          <li><strong>${user.following}</strong> Following</li>
          <li><strong>${user.public_repos}</strong> Repos</li>
        </ul>
        <div id="repos"></div>
      </div>
    </div>
  `;
  main.innerHTML = cardHTML;
}

// Create error card
function createErrorCard(msg) {
  const cardHTML = `
    <div class="card">
      <h2>${msg}</h2>
    </div>
  `;
  main.innerHTML = cardHTML;
}

// Add repos to the card
function addReposToCard(repos) {
  const reposEl = document.getElementById("repos");

  repos.slice(0, 5).forEach((repo) => {
    const repoLink = document.createElement("a");
    repoLink.classList.add("repo");
    repoLink.href = repo.html_url;
    repoLink.target = "_blank";
    repoLink.textContent = repo.name;

    reposEl.appendChild(repoLink);
  });
}
